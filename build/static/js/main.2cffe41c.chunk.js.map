{"version":3,"sources":["components/contactsItem/ContactsItem.module.css","components/filter/Filter.module.css","components/buttons/Button.module.css","components/notification/Notification.module.css","components/notification/slide.module.css","components/contactForm/ContactForm.module.css","components/contactList/slide.module.css","components/contactList/ContactList.module.css","components/logo/Logo.module.css","components/container/Container.module.css","components/slideAppear.module.css","components/filter/pop.module.css","redux/actions/phonebookActions.js","redux/redusers/phonebookReducer.js","redux/store.js","components/buttons/ButtonAdd.js","components/customInput/CustomInput.js","components/notification/Notification.js","components/contactForm/ContactForm.js","components/buttons/ButtonRemove.js","components/contactsItem/ContactsItem.js","components/contactList/ContactList.js","components/filter/Filter.js","components/logo/Logo.js","components/container/Container.js","components/App.js","index.js"],"names":["module","exports","addContact","createAction","removeContact","filterContacts","items","createReducer","state","type","payload","filter","item","id","combineReducers","persistConfig","key","storage","rootReducer","contacts","phonebookReducer","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","PERSIST","persistor","persistStore","ButtonAdd","className","styles","Button","useStyles","makeStyles","theme","root","width","textTransform","margin","spacing","CustomInput","name","handleChange","value","classes","TextField","uuidv4","variant","label","onChange","Notification","pop","ContactForm","number","error","target","setState","handleSubmitForm","event","preventDefault","props","find","contact","setTimeout","onSubmit","this","form","required","CSSTransition","in","timeout","classNames","slideNotiAppear","unmountOnExit","React","Component","mapDispatchToProps","connect","minWidth","ButtonRemove","onClick","data-id","color","ContactsItem","dispatch","useDispatch","ListItem","Text","Number","e","currentTarget","dataset","ContactsList","useSelector","toLowerCase","filteredContacts","includes","TransitionGroup","component","List","map","el","length","slideStyles","Filter","FilterWrap","Label","Logo","logo","Container","children","container","App","appear","slideLogoAppear","popFilterStyles","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2cffe41c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItem\":\"ContactsItem_ListItem__2tJRR\",\"Text\":\"ContactsItem_Text__SmZZM\",\"Number\":\"ContactsItem_Number__3PJF1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"FilterWrap\":\"Filter_FilterWrap__3KdvT\",\"Label\":\"Filter_Label__2BfPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1RHSj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pop\":\"Notification_pop__19S1_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__nDnZQ\",\"enterActive\":\"slide_enterActive__UP31u\",\"exit\":\"slide_exit__12UTF\",\"exitActive\":\"slide_exitActive__2yJg4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1ghlp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__1bP71\",\"enterActive\":\"slide_enterActive__1-S-L\",\"exit\":\"slide_exit__3TIgi\",\"exitActive\":\"slide_exitActive__30rXC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"List\":\"ContactList_List__1r-9P\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__fDUiM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1ozFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"slideAppear_appear__2oND1\",\"appearActive\":\"slideAppear_appearActive__3VgsE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__3nDSM\",\"enterActive\":\"pop_enterActive__2EoQg\",\"exit\":\"pop_exit__10u23\",\"exitActive\":\"pop_exitActive__21clk\"};","import { createAction } from '@reduxjs/toolkit';\r\n\r\nconst addContact = createAction('@phonebook/addContact');\r\nconst removeContact = createAction('@phonebook/removeContact');\r\nconst filterContacts = createAction('@phonebook/filterContacts');\r\n\r\nexport { addContact, removeContact, filterContacts };","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  addContact,\r\n  removeContact,\r\n  filterContacts,\r\n} from '../actions/phonebookActions';\r\n\r\nconst onAddContact = (state, { type, payload }) => [...state, payload];\r\nconst onRemoveContact = (state, { type, payload }) =>\r\n  state.filter(item => item.id !== payload);\r\n\r\nconst items = createReducer([], {\r\n  [addContact]: onAddContact,\r\n  [removeContact]: onRemoveContact,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [filterContacts]: (state, { type, payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({ items, filter });","import {\r\n    configureStore,\r\n    combineReducers,\r\n    getDefaultMiddleware,\r\n  } from '@reduxjs/toolkit';\r\n  import { persistStore, persistReducer, PERSIST } from 'redux-persist';\r\n  import storage from 'redux-persist/lib/storage';\r\n  import phonebookReducer from './redusers/phonebookReducer';\r\n  \r\n  const persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n  };\r\n  \r\n  const rootReducer = combineReducers({\r\n    contacts: phonebookReducer,\r\n  });\r\n  \r\n  const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n  \r\n  export const store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware: getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoredActions: [PERSIST],\r\n      },\r\n    }),\r\n  });\r\n  \r\n  export const persistor = persistStore(store);","import React from 'react';\r\nimport styles from './Button.module.css';\r\n\r\nexport function ButtonAdd() {\r\n  return (\r\n    <button type=\"submit\" className={styles.Button}>\r\n      ADD\r\n    </button>\r\n  );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    width: '100%',\r\n    textTransform: 'capitalize',\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport function CustomInput({ name, handleChange, value, type }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <TextField\r\n        id={uuidv4()}\r\n        variant=\"outlined\"\r\n        value={value}\r\n        label={name}\r\n        name={name}\r\n        type={type}\r\n        onChange={handleChange}\r\n        classes={classes}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nCustomInput.propTypes = {\r\n  name: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  handleChange: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport styles from './Notification.module.css';\r\n\r\nexport function Notification() {\r\n  return <div className={styles.pop}>Contact is already exists!!!</div>;\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { addContact } from '../../redux/actions/phonebookActions';\r\nimport { ButtonAdd } from '../buttons/ButtonAdd';\r\nimport { CustomInput } from '../customInput/CustomInput';\r\nimport { Notification } from '../notification/Notification';\r\nimport slideNotiAppear from '../notification/slide.module.css';\r\nimport styles from './ContactForm.module.css';\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n    error: false,\r\n  };\r\n\r\n  handleChange = ({ target: { value, name } }) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmitForm = event => {\r\n    event.preventDefault();\r\n    if (\r\n      this.props.state.contacts.items.find(\r\n        contact => contact.name === this.state.name,\r\n      )\r\n    ) {\r\n      this.setState({ error: true, name: '', number: '' });\r\n      setTimeout(() => {\r\n        this.setState({ error: false });\r\n      }, 2500);\r\n    } else {\r\n      const contact = {\r\n        name: this.state.name,\r\n        number: this.state.number,\r\n        id: uuidv4(),\r\n      };\r\n      this.props.addContact(contact);\r\n      this.setState({ name: '', number: '' });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmitForm} className={styles.form}>\r\n          <CustomInput\r\n            label=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n          <CustomInput\r\n            label=\"number\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            handleChange={this.handleChange}\r\n            required\r\n          />\r\n\r\n          <ButtonAdd type=\"submit\">Add contact</ButtonAdd>\r\n        </form>\r\n        <CSSTransition\r\n          in={this.state.error}\r\n          timeout={250}\r\n          classNames={slideNotiAppear}\r\n          unmountOnExit\r\n        >\r\n          <Notification />\r\n        </CSSTransition>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return { state };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n  addContact: addContact,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    '& > *': {\r\n      minWidth: '0',\r\n    },\r\n  },\r\n}));\r\n\r\nexport function ButtonRemove({ type, id, onClick }) {\r\n  const classes = useStyles();\r\n  return (\r\n    <Button\r\n      type={type}\r\n      data-id={id}\r\n      onClick={onClick}\r\n      variant=\"contained\"\r\n      color=\"secondary\"\r\n      classes={classes}\r\n    >\r\n      &#10006;\r\n    </Button>\r\n  );\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { removeContact } from '../../redux/actions/phonebookActions';\r\nimport { ButtonRemove } from '../buttons/ButtonRemove';\r\nimport styles from './ContactsItem.module.css';\r\n\r\nexport function ContactsItem({ contact: { name, number, id } }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = e => dispatch(removeContact(e.currentTarget.dataset.id));\r\n\r\n  return (\r\n    <li className={styles.ListItem}>\r\n      <span className={styles.Text}>{name}: </span>\r\n      <span className={styles.Number}>{number}</span>\r\n      <ButtonRemove type=\"button\" id={id} onClick={handleClick} />\r\n    </li>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport { ContactsItem } from '../contactsItem/ContactsItem';\r\nimport slideStyles from './slide.module.css';\r\nimport styles from './ContactList.module.css';\r\n\r\nexport function ContactsList() {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n  const filter = useSelector(state => state.contacts.filter.toLowerCase());\r\n  const filteredContacts = contacts.filter(contact =>\r\n    contact.name ? contact.name.toLowerCase().includes(filter) : contacts,\r\n  );\r\n\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={styles.List}>\r\n      {filteredContacts.map(el => (\r\n        <CSSTransition\r\n          in={contacts.length > 0}\r\n          key={el.id}\r\n          timeout={250}\r\n          classNames={slideStyles}\r\n          unmountOnExit\r\n        >\r\n          <ContactsItem key={el.id} contact={el} />\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  );\r\n}","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { filterContacts } from '../../redux/actions/phonebookActions';\r\nimport { CustomInput } from '../customInput/CustomInput';\r\nimport styles from './Filter.module.css';\r\n\r\nexport function Filter() {\r\n  const filter = useSelector(state => state.contacts.filter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e => {\r\n    dispatch(filterContacts(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <div className={styles.FilterWrap}>\r\n      <label className={styles.Label}>\r\n        Find contacts by name\r\n        <CustomInput\r\n          type=\"search\"\r\n          value={filter}\r\n          handleChange={onChangeFilter}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport styles from './Logo.module.css';\r\n\r\nexport function Logo() {\r\n  return <h1 className={styles.logo}>Phonebook</h1>;\r\n}","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nexport function Container({ children }) {\r\n  return <div className={styles.container}>{children}</div>;\r\n}","import React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { useSelector } from 'react-redux';\r\nimport ContactForm from './contactForm/ContactForm';\r\nimport { ContactsList } from './contactList/ContactList';\r\nimport { Filter } from './filter/Filter';\r\nimport { Logo } from './logo/Logo';\r\nimport { Container } from './container/Container';\r\nimport slideLogoAppear from './slideAppear.module.css';\r\nimport popFilterStyles from './filter/pop.module.css';\r\n\r\nexport function App() {\r\n  const contacts = useSelector(state => state.contacts.items);\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <CSSTransition\r\n          in\r\n          appear\r\n          timeout={500}\r\n          classNames={slideLogoAppear}\r\n          unmountOnExit\r\n        >\r\n          <Logo />\r\n        </CSSTransition>\r\n\r\n        <ContactForm />\r\n        <CSSTransition\r\n          in={contacts.length > 1}\r\n          timeout={250}\r\n          classNames={popFilterStyles}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n        {contacts.length < 1 && <p>You have no contacts yet</p>}\r\n        <ContactsList />\r\n      </Container>\r\n    </>\r\n  );\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport { App } from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<h2>loading</h2>} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root'),\n);"],"sourceRoot":""}